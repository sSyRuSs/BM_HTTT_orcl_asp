// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using WebApplication1.Models;

#nullable disable

namespace BTL_final.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20231109174117_AddIdentityAuth")]
    partial class AddIdentityAuth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("LONG12")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("\"NormalizedName\" IS NOT NULL");

                    b.ToTable("AspNetRoles", "LONG12");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", "LONG12");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser<string>", b =>
                {
                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.ToTable("IdentityUser<string>", "LONG12");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NUMBER(38)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", "LONG12");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NUMBER(38)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", "LONG12");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NUMBER(38)");

                    b.Property<string>("RoleId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", "LONG12");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NUMBER(38)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", "LONG12");
                });

            modelBuilder.Entity("WebApplication1.Models.Dongsp", b =>
                {
                    b.Property<decimal>("Madong")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MADONG");

                    b.Property<string>("Loai")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("LOAI");

                    b.Property<string>("Tendong")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("TENDONG");

                    b.HasKey("Madong")
                        .HasName("SYS_C0010415");

                    b.ToTable("DONGSP", "LONG12");
                });

            modelBuilder.Entity("WebApplication1.Models.Hoadon", b =>
                {
                    b.Property<decimal>("Mahd")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MAHD");

                    b.Property<decimal>("Makh")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MAKH");

                    b.Property<string>("Manv")
                        .IsRequired()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MANV");

                    b.Property<decimal>("Masp")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MASP");

                    b.Property<DateTime?>("Ngaymua")
                        .HasColumnType("DATE")
                        .HasColumnName("NGAYMUA");

                    b.HasKey("Mahd")
                        .HasName("SYS_C0010429");

                    b.HasIndex("Makh");

                    b.HasIndex("Manv");

                    b.HasIndex("Masp");

                    b.ToTable("HOADON", "LONG12");
                });

            modelBuilder.Entity("WebApplication1.Models.Khachhang", b =>
                {
                    b.Property<decimal>("Makh")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MAKH");

                    b.Property<string>("Diachi")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("DIACHI");

                    b.Property<string>("Sdt")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("SDT");

                    b.Property<string>("Tenkh")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("TENKH");

                    b.HasKey("Makh")
                        .HasName("SYS_C0010424");

                    b.ToTable("KHACHHANG", "LONG12");
                });

            modelBuilder.Entity("WebApplication1.Models.Nhanvien", b =>
                {
                    b.Property<string>("Manv")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MANV");

                    b.Property<string>("Chucvu")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("CHUCVU");

                    b.Property<string>("Sdt")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("SDT");

                    b.Property<string>("Tennv")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("TENNV");

                    b.HasKey("Manv")
                        .HasName("SYS_C0010411");

                    b.ToTable("NHANVIEN", "LONG12");
                });

            modelBuilder.Entity("WebApplication1.Models.Sanpham", b =>
                {
                    b.Property<decimal>("Masp")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MASP");

                    b.Property<decimal>("Giaban")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("GIABAN");

                    b.Property<decimal>("Madong")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MADONG");

                    b.Property<decimal?>("Sltonkho")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("SLTONKHO");

                    b.Property<string>("Tensp")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("TENSP");

                    b.HasKey("Masp")
                        .HasName("SYS_C0010420");

                    b.HasIndex("Madong");

                    b.ToTable("SANPHAM", "LONG12");
                });

            modelBuilder.Entity("WebApplication1.Models.Taikhoannv", b =>
                {
                    b.Property<string>("Manv")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MANV");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<string>("Matkhau")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("MATKHAU");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Manv")
                        .HasName("SYS_C0010407");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("\"NormalizedUserName\" IS NOT NULL");

                    b.ToTable("TAIKHOANNV", "LONG12");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebApplication1.Models.Taikhoannv", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebApplication1.Models.Taikhoannv", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Taikhoannv", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebApplication1.Models.Taikhoannv", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.Hoadon", b =>
                {
                    b.HasOne("WebApplication1.Models.Khachhang", "MakhNavigation")
                        .WithMany("Hoadons")
                        .HasForeignKey("Makh")
                        .IsRequired()
                        .HasConstraintName("FK_HOADON_KHACHHANG");

                    b.HasOne("WebApplication1.Models.Nhanvien", "ManvNavigation")
                        .WithMany("Hoadons")
                        .HasForeignKey("Manv")
                        .IsRequired()
                        .HasConstraintName("FK_HOADON_NHANVIEN");

                    b.HasOne("WebApplication1.Models.Sanpham", "MaspNavigation")
                        .WithMany("Hoadons")
                        .HasForeignKey("Masp")
                        .IsRequired()
                        .HasConstraintName("FK_HOADON_SANPHAM");

                    b.Navigation("MakhNavigation");

                    b.Navigation("ManvNavigation");

                    b.Navigation("MaspNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.Sanpham", b =>
                {
                    b.HasOne("WebApplication1.Models.Dongsp", "MadongNavigation")
                        .WithMany("Sanphams")
                        .HasForeignKey("Madong")
                        .IsRequired()
                        .HasConstraintName("FK_SANPHAM_DONGSP");

                    b.Navigation("MadongNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.Taikhoannv", b =>
                {
                    b.HasOne("WebApplication1.Models.Nhanvien", "ManvNavigation")
                        .WithOne("Taikhoannv")
                        .HasForeignKey("WebApplication1.Models.Taikhoannv", "Manv")
                        .IsRequired()
                        .HasConstraintName("FK_TAIKHOANNV_NHANVIEN");

                    b.Navigation("ManvNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.Dongsp", b =>
                {
                    b.Navigation("Sanphams");
                });

            modelBuilder.Entity("WebApplication1.Models.Khachhang", b =>
                {
                    b.Navigation("Hoadons");
                });

            modelBuilder.Entity("WebApplication1.Models.Nhanvien", b =>
                {
                    b.Navigation("Hoadons");

                    b.Navigation("Taikhoannv")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.Sanpham", b =>
                {
                    b.Navigation("Hoadons");
                });
#pragma warning restore 612, 618
        }
    }
}
